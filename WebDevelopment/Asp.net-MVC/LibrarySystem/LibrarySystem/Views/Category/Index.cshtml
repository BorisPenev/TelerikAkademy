@using LibrarySystem.Models

@{
    ViewBag.Title = "Categories";
}

<h2>@ViewBag.Title</h2>
@(Html.Kendo().Grid<CategoryVewModel>()
    .Name("grdCategories")
        .Columns(columns =>
        {
            columns.Bound(p => p.Name);
            columns.Command(command => { command.Edit(); command.Destroy(); });
        })
        .ToolBar(toolbar => toolbar.Create())
        .Editable(editable => editable.Mode(GridEditMode.PopUp).DisplayDeleteConfirmation(true))
        .Pageable()
        .Sortable()
        .Scrollable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(5)
            .Events(events => events.Error("error_handler"))
            .Model(model => model.Id(p => p.Id))
            .Create(update => update.Action("CreateCommand", "Category").Data("sendAntiForgery"))
            .Read(read => read.Action("ReadCommand", "Category"))
            .Update(update => update.Action("UpdateCommand", "Category").Data("sendAntiForgery"))
            .Destroy(update => update.Action("DestroyCommand", "Category").Data("sendAntiForgery"))
        )
)

@section scripts{
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    
    function sendAntiForgery() {
        return { "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() };
    }
</script>
}